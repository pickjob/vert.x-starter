plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'com.zyxist.chainsaw' version '0.3.1'
}

group 'pickjob'
version '1.0-SNAPSHOT'
javaModule.name = 'pickjob.vertx.starter'

dependencies {
    // logger
    implementation 'org.apache.logging.log4j:log4j-api:2.11.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.11.1'
    // vertx
    implementation 'io.vertx:vertx-core:3.6.2'
    implementation 'io.vertx:vertx-web:3.6.2'
    implementation 'io.vertx:vertx-web-client:3.6.2'
    // guava
    implementation 'com.google.guava:guava:27.0.1-jre'
    // commons
    implementation 'org.apache.commons:commons-lang3:3.8'
    
    testImplementation 'io.vertx:vertx-junit5:3.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testImplementation  'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.2'
}

repositories {
    maven {
        url "https://maven.aliyun.com/repository/central"
    }
}

/*
 *  Plugin: java配置
 */
compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
    options.encoding = 'UTF-8'
}
compileTestJava {
    sourceCompatibility = 11
    targetCompatibility = 11
    options.encoding = 'UTF-8'
}
processResources {
    destinationDir = sourceSets.main.java.outputDir
}
processTestResources {
    destinationDir = sourceSets.test.java.outputDir
}
jar {
    manifest {
        attributes 'Main-Class': 'io.vertx.core.Launcher'
        attributes 'Main-Verticle': "app.HelloVerticle"
        attributes 'Class-Path': configurations.runtimeClasspath.files.collect { it.name }.join(' ')
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
/*
 * Plugin: Appliction
 */
run {
    main = "${mainClassName}"
}
/*
 *  Plugin: idea 配置
 */
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
        inheritOutputDirs = false
        outputDir = sourceSets.main.java.outputDir
        testOutputDir = sourceSets.test.java.outputDir
    }
}